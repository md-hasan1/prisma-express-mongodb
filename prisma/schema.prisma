generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  fullName          String
  email             String        @unique
  profileImage      String?
  coverImage        String?
  expirationOtp     DateTime?
  otp               Int?
  password          String
  isApproved        Boolean       @default(false)
  isCompleteProfile Boolean       @default(false)
  role              UserRole      @default(USER)
  status            UserStatus    @default(ACTIVE)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  Organization      Organization?
  student           Student?

  @@map("users")
}

model Organization {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @unique @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  description String
  location    String
  website     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  student     Student[]

  @@map("organization")
}

model Student {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  organizationId String       @db.ObjectId
  organization   Organization @relation(fields: [organizationId], references: [id])
  userId         String       @unique @db.ObjectId
  user           User         @relation(fields: [userId], references: [id])
  level          String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  @@map("student")
}

model Level {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("level")
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
  GUST
  SCHOOL
  SHOP
  STUDENT
  PROFESSIONAL
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}
